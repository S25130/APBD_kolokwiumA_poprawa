// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using S25130.Data;

#nullable disable

namespace S25130.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250622092527_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("S25130.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Anna",
                            HireDate = new DateTime(2017, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Jantar"
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Kamil",
                            HireDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Grzywaczewski"
                        });
                });

            modelBuilder.Entity("S25130.Models.Nursery", b =>
                {
                    b.Property<int>("NurseryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NurseryId"));

                    b.Property<DateTime>("EstablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NurseryId");

                    b.ToTable("Nurseries");

                    b.HasData(
                        new
                        {
                            NurseryId = 1,
                            EstablishedDate = new DateTime(2005, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Birch Forest Nursery"
                        });
                });

            modelBuilder.Entity("S25130.Models.Responsible", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BatchId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Responsibles");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            EmployeeId = 1,
                            Role = "Supervisor"
                        },
                        new
                        {
                            BatchId = 1,
                            EmployeeId = 2,
                            Role = "Senior Planter"
                        });
                });

            modelBuilder.Entity("S25130.Models.SeedlingBatch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<int>("NurseryId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SownDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("BatchId");

                    b.HasIndex("NurseryId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Batches");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            NurseryId = 1,
                            Quantity = 500,
                            ReadyDate = new DateTime(2032, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SownDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SpeciesId = 1
                        });
                });

            modelBuilder.Entity("S25130.Models.TreeSpecies", b =>
                {
                    b.Property<int>("SpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpeciesId"));

                    b.Property<int>("GrowthTimeInYears")
                        .HasColumnType("int");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpeciesId");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            SpeciesId = 1,
                            GrowthTimeInYears = 8,
                            LatinName = "Betula pendula"
                        });
                });

            modelBuilder.Entity("S25130.Models.Responsible", b =>
                {
                    b.HasOne("S25130.Models.SeedlingBatch", "Batch")
                        .WithMany("Responsibles")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("S25130.Models.Employee", "Employee")
                        .WithMany("Responsibles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("S25130.Models.SeedlingBatch", b =>
                {
                    b.HasOne("S25130.Models.Nursery", "Nursery")
                        .WithMany("Batches")
                        .HasForeignKey("NurseryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("S25130.Models.TreeSpecies", "Species")
                        .WithMany("Batches")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nursery");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("S25130.Models.Employee", b =>
                {
                    b.Navigation("Responsibles");
                });

            modelBuilder.Entity("S25130.Models.Nursery", b =>
                {
                    b.Navigation("Batches");
                });

            modelBuilder.Entity("S25130.Models.SeedlingBatch", b =>
                {
                    b.Navigation("Responsibles");
                });

            modelBuilder.Entity("S25130.Models.TreeSpecies", b =>
                {
                    b.Navigation("Batches");
                });
#pragma warning restore 612, 618
        }
    }
}
